name: Deploy Security Services
on:
  workflow_dispatch:
    inputs:
      services:
        description: 'Specify the services to deploy (access-analyser, guard-duty, inspector, macie, securityhub, detective, config, inspection-lambda, hostedzone-master). Use a comma to separate multiple services.'
        required: true
      confirm_apply:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-1:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-2:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-3:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-4:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-5:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-6:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-7:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-8:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-9:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-10:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false
      confirm_apply-11:
        description: 'Confirm if you want to apply the changes after planning'
        required: true
        type: choice
        options:
          - true
          - false

permissions:
  id-token: write
  contents: read

jobs:
  validate-services:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Set services from input
        id: set-services
        run: |
          if [[ -z "${{ github.event.inputs.services }}" ]]; then
            echo "No services selected. Skipping deployment."
            echo "::set-output name=services::none"
          else
            echo "::set-output name=services::${{ github.event.inputs.services }}"
          fi

  AccessAnalyser:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'access-analyser')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: Access-analyser
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/access-analyser/access-analyser.yaml'
      permission-model: SELF_MANAGED
      execution-role-name: AWSControlTowerExecution
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=AccessAnalyserMasterAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.ACCESS_ANALYSER_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  GuardDuty:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'guard-duty')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: GuardDuty
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/guardduty/aws-control-tower-guardduty-enabler.template'
      permission-model: SELF_MANAGED
      execution-role-name: AWSControlTowerExecution
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=SecurityAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3SourceFile,ParameterValue=${{ secrets.GUARD_DUTY_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  Inspector:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'inspector')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: Inspector
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/inspector/inspector.yaml'
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=InspectorAuditAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.INSPECTOR_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  Aws-macie:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'macie')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: Aws-macie
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/aws-macie/enable-macie.yaml'
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=MacieMasterAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.MACIE_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  SecurityHub:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'securityhub')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: SecurityHub
      template-url: 'https://controltower-10-oct.s3.ap-south-1.amazonaws.com/security-hub/aws-control-tower-securityhub-enabler.template' 
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=SecurityAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3SourceFile,ParameterValue=${{ secrets.SECURITYHUB_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  Detective:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'detective')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: Detective
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/detective/detective.yaml'
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=DetectiveMasterAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.DETECTIVE_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  Config:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'config')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: Config
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/aws-config/aws-config.yaml'
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=ConfigMasterAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.CONFIG_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  InspectionLambda:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'inspection-lambda')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: InspectionLambda
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/inspection-lambda/inspection-lambda.yaml'
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=InspectionLambdaMasterAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.INSPECTION_LAMBDA_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}

  HostedZoneMaster:
    needs: validate-services
    if: contains(needs.validate-services.outputs.services, 'hostedzone-master')
    uses: ./.github/workflows/sharedworkflow_deploy-cloudformation-stackset.yml
    with:
      aws-region: us-east-1
      stackset-instance-region: us-east-1
      stack-set-name: HostedZoneMaster
      template-url: 'https://isocrates-control-tower-cloudformation-template.s3.amazonaws.com/hostedzone-master/hostedzone-master.yaml'
      permission-model: SELF_MANAGED
      auto-deployment-enabled: false
      RetainStacksOnAccountRemoval: false
      execution-role-name: AWSControlTowerExecution
    secrets:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
      account-ids: ${{ secrets.ACCOUNT_IDS }}
      administration-role-arn: ${{ secrets.ADMIN_ROLE_ARN }}
      parameter-overrides: ParameterKey=OrganizationId,ParameterValue=${{ secrets.ORGANIZATION_ID }} ParameterKey=HostedZoneMasterAccountId,ParameterValue=${{ secrets.MASTER_ACCOUNT_ID }} ParameterKey=S3SourceBucket,ParameterValue=${{ secrets.S3_SOURCE_BUCKET }} ParameterKey=S3Key,ParameterValue=${{ secrets.HOSTED_ZONE_MASTER_KEY }} ParameterKey=ExcludedAccounts,ParameterValue=${{ secrets.EXCLUDED_ACCOUNT_ID }}
