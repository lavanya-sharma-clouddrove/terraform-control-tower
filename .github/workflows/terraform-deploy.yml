name: Deploy Terraform Stack

# Triggered only when manually run (workflow_dispatch)
on:
  workflow_dispatch:
    inputs:
      enable_access_analyzer:
        description: 'Enable Access Analyzer Stack'
        required: true
        default: 'false'
        type: boolean
      enable_detective:
        description: 'Enable Detective Stack'
        required: true
        default: 'false'
        type: boolean
      enable_guardduty:
        description: 'Enable GuardDuty Stack'
        required: true
        default: 'false'
        type: boolean
      enable_security_hub:
        description: 'Enable Security Hub Stack'
        required: true
        default: 'false'
        type: boolean

jobs:
  deploy:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Change version if needed

      - name: Initialize Terraform
        run: terraform init

      - name: Format Terraform code
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var "enable_access_analyzer=${{ github.event.inputs.enable_access_analyzer }}" \
            -var "enable_detective=${{ github.event.inputs.enable_detective }}" \
            -var "enable_guardduty=${{ github.event.inputs.enable_guardduty }}" \
            -var "enable_security_hub=${{ github.event.inputs.enable_security_hub }}" \
            -var "region=${{ secrets.AWS_REGION }}" \
            -var "delegated_account_id=${{ secrets.DELEGATED_ACCOUNT_ID }}" \
            -var "template_bucket_name=${{ secrets.TEMPLATE_BUCKET_NAME }}" \
            -var "role_to_assume=${{ secrets.ROLE_TO_ASSUME }}"

      - name: Apply Terraform (manual approval required)
        if: ${{ github.event.inputs.confirm_apply == 'true' }}  # Only if 'true' input
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output
